{"ast":null,"code":"var _jsxFileName = \"/Users/bogdanbilovodskyi/Desktop/programming/frontend/react-practice/react-projects/10-grocery-bud/setup/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\nimport Alert from './Alert';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [list, setList] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editId, setEditId] = useState(null);\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: '',\n    type: ''\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) {\n      showAlert(true, 'please enter value', 'danger');\n    } else if (name && isEditing) {// deal with edit \n    } else {\n      showAlert(true, 'item added to the list', 'success');\n      const newItem = {\n        id: new Date().getTime().toString(),\n        title: name\n      };\n      setList([...list, newItem]);\n      setName('');\n    }\n  };\n\n  const showAlert = (show = false, msg = '', type = '') => {\n    setAlert({\n      show,\n      msg,\n      type\n    });\n  };\n\n  const clearList = () => {\n    showAlert(true, 'empty list', 'danger');\n    setList([]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"grocery-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, alert.show && /*#__PURE__*/React.createElement(Alert, Object.assign({}, alert, {\n    removeAlert: showAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"grocery bud\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"grocery\",\n    placeholder: \"Add a new item\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, isEditing ? 'edit' : 'submit'))), list.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grocery-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    items: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-btn\",\n    onClick: clearList(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"clear items\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bogdanbilovodskyi/Desktop/programming/frontend/react-practice/react-projects/10-grocery-bud/setup/src/App.js"],"names":["React","useState","useEffect","List","Alert","App","name","setName","list","setList","isEditing","setIsEditing","editId","setEditId","alert","setAlert","show","msg","type","handleSubmit","e","preventDefault","showAlert","newItem","id","Date","getTime","toString","title","clearList","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\nfunction App() {\n  const [name, setName] = useState('')\n  const [list, setList] = useState([])\n  const [isEditing, setIsEditing] = useState(false)\n  const [editId, setEditId] = useState(null)\n  const [alert, setAlert] = useState({show: false, msg: '', type: ''})\n  \n  const handleSubmit = e => {\n    e.preventDefault()\n    if (!name) {\n      showAlert(true, 'please enter value', 'danger')\n    } else if (name && isEditing) {\n      // deal with edit \n    } else {\n      showAlert(true, 'item added to the list', 'success')\n      const newItem = { id: new Date().getTime().toString(), title: name }\n      setList([...list, newItem])\n      setName('')\n    }\n  }\n\n  const showAlert = (show=false, msg='', type='') => {\n    setAlert({show, msg, type})\n  }\n\n  const clearList = () => {\n     showAlert(true, 'empty list', 'danger')\n     setList([])\n  }\n\n\n  return <section className='section-center'>\n    <form className='grocery-form' onSubmit={handleSubmit}>\n      {alert.show && <Alert {...alert} removeAlert={showAlert}/>}\n      <h3>grocery bud</h3>\n      <div className=\"form-control\">\n        <input type=\"text\" className='grocery' placeholder='Add a new item' value={name} onChange={(e) => setName(e.target.value)}/>\n        <button type='submit' className='submit-btn'>\n          {isEditing ? 'edit' : 'submit'}\n        </button>\n      </div>\n    </form>\n    {list.length > 0 && (\n          <div className=\"grocery-container\">\n          <List items={list}/>\n          <button className=\"clear-btn\" onClick={clearList()}>clear items</button>\n        </div>\n    )}\n  </section>\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}