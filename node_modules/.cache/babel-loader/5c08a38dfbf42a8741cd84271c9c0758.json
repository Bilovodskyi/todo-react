{"ast":null,"code":"var _jsxFileName = \"/Users/bogdanbilovodskyi/Desktop/programming/frontend/react-practice/rgocery-bud/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\nimport Alert from './Alert';\nimport shrug from './icons/shrug.png';\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list');\n\n  if (list) {\n    return JSON.parse(localStorage.getItem('list'));\n  } else {\n    return [];\n  }\n};\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [list, setList] = useState(getLocalStorage());\n  const [isEditing, setIsEditing] = useState(false);\n  const [editId, setEditId] = useState(null);\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: '',\n    type: ''\n  }); // const [status, setStatus] = useState(false)\n\n  const [isActive, setIsActive] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) {\n      showAlert(true, 'Please enter value', 'red');\n    } else if (name && isEditing) {\n      setList(list.map(item => {\n        if (item.id === editId) {\n          return { ...item,\n            title: name\n          };\n        }\n\n        return item;\n      }));\n      setName('');\n      setEditId(null);\n      setIsEditing(false);\n      showAlert(true, 'Item edited', 'green');\n    } else {\n      showAlert(true, 'New item added', 'green');\n      const newItem = {\n        id: new Date().getTime().toString(),\n        title: name,\n        status: 'pending'\n      };\n      setList([...list, newItem]);\n      setName('');\n    }\n  };\n\n  const showAlert = (show = false, msg = '', type = '') => {\n    setAlert({\n      show,\n      msg,\n      type\n    });\n  };\n\n  const updateStatus = id => {\n    setList(list.map(item => {\n      if (item.id === id && item.status === 'pending') {\n        return { ...item,\n          status: 'completed'\n        };\n      } else if (item.id === id && item.status === 'complited') {\n        return { ...item,\n          status: 'pending'\n        };\n      }\n\n      return item;\n    }));\n  }; // const isComplete = () => {\n  //   if(status){\n  //     return 'checked'\n  //   } else {\n  //     return ''\n  //   }\n  // }\n\n\n  const clearList = () => {\n    showAlert(true, 'Empty list', 'red');\n    setList([]);\n  };\n\n  const removeItem = id => {\n    showAlert(true, 'Item removed', 'red');\n    setList(list.filter(item => item.id !== id));\n  };\n\n  const editItem = id => {\n    const specificItem = list.find(item => item.id === id);\n    setIsEditing(true);\n    setEditId(id);\n    setName(specificItem.title);\n  };\n\n  const showMenu = id => {\n    setIsActive(id);\n  };\n\n  useEffect(() => {\n    document.body.addEventListener('click', e => {\n      setIsActive('');\n    });\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(list));\n  }, [list]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, \"Task Manager\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, alert.show && /*#__PURE__*/React.createElement(Alert, Object.assign({}, alert, {\n    removeAlert: showAlert,\n    list: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"grocery\",\n    placeholder: \"Add a new task\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"add-btn\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, isEditing ? 'Edit' : 'Submit')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"all\",\n    className: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Pending\"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Completed\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-btn\",\n    onClick: clearList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Delete all\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"task-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, list.length > 0 ? /*#__PURE__*/React.createElement(List, {\n    items: list,\n    removeItem: removeItem,\n    editItem: editItem,\n    isActive: isActive,\n    showMenu: showMenu,\n    updateStatus: updateStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 41\n    }\n  }, \"Looks like you don't have any task here\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"shrug\",\n    src: shrug,\n    alt: \"shrug\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 93\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bogdanbilovodskyi/Desktop/programming/frontend/react-practice/rgocery-bud/src/App.js"],"names":["React","useState","useEffect","List","Alert","shrug","getLocalStorage","list","localStorage","getItem","JSON","parse","App","name","setName","setList","isEditing","setIsEditing","editId","setEditId","alert","setAlert","show","msg","type","isActive","setIsActive","handleSubmit","e","preventDefault","showAlert","map","item","id","title","newItem","Date","getTime","toString","status","updateStatus","clearList","removeItem","filter","editItem","specificItem","find","showMenu","document","body","addEventListener","setItem","stringify","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\nimport shrug from './icons/shrug.png'\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list')\n  if(list) {\n    return JSON.parse(localStorage.getItem('list'))\n  } else {\n    return []\n  }\n}\n\nfunction App() {\n  const [name, setName] = useState('')\n  const [list, setList] = useState(getLocalStorage())\n  const [isEditing, setIsEditing] = useState(false)\n  const [editId, setEditId] = useState(null)\n  const [alert, setAlert] = useState({show: false, msg: '', type: ''})\n  // const [status, setStatus] = useState(false)\n  const [isActive, setIsActive] = useState('')\n  \n  const handleSubmit = e => {\n    e.preventDefault()\n    if (!name) {\n      showAlert(true, 'Please enter value', 'red')\n    } else if (name && isEditing) {\n      setList(list.map((item) => {\n        if(item.id === editId) {\n          return {...item, title: name}\n        }\n        return item\n      }))\n      setName('')\n      setEditId(null)\n      setIsEditing(false)\n      showAlert(true, 'Item edited', 'green')\n    } else {\n      showAlert(true, 'New item added', 'green')\n      const newItem = { id: new Date().getTime().toString(), title: name, status: 'pending' }\n      setList([...list, newItem])\n      setName('')\n    }\n  }\n\n  const showAlert = (show=false, msg='', type='') => {\n    setAlert({show, msg, type})\n  }\n\n  const updateStatus = (id) => {\n    setList(list.map((item) => {\n      if(item.id === id && item.status === 'pending') {\n        return {...item, status: 'completed'}\n      } else if (item.id === id && item.status === 'complited') {\n        return {...item, status: 'pending'}\n      }\n      return item\n    }))\n  }\n\n  // const isComplete = () => {\n  //   if(status){\n  //     return 'checked'\n  //   } else {\n  //     return ''\n  //   }\n  // }\n\n  const clearList = () => {\n     showAlert(true, 'Empty list', 'red')\n     setList([])\n  }\n\n  const removeItem = (id) => {\n    showAlert(true, 'Item removed', 'red')\n    setList(list.filter((item) => item.id !== id))\n  } \n\n  const editItem = (id) => {\n    const specificItem = list.find((item) => item.id === id)\n    setIsEditing(true)\n    setEditId(id)\n    setName(specificItem.title)\n  }\n\n  const showMenu = (id) => {\n    setIsActive(id)\n  }\n\n  useEffect(() => {\n    document.body.addEventListener('click', e => {\n      setIsActive('')\n    })\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(list))\n  }, [list])\n\n  return (\n  <section className='wrapper'>\n    <h1>Task Manager</h1>\n    <p className='alert'>{alert.show && <Alert {...alert} removeAlert={showAlert} list={list}/>}</p>\n    <div className='task-input'>\n      <input type=\"text\" className='grocery' placeholder='Add a new task' value={name} onChange={(e) => setName(e.target.value)}/>\n      <button type='submit' className='add-btn' onClick={handleSubmit}>\n        {isEditing ? 'Edit' : 'Submit'}\n      </button>\n    </div>\n    <div className=\"controls\">\n            <div className=\"filters\">\n                <span id=\"all\" className=\"active\">All</span>\n                <span id=\"pending\">Pending</span>\n                <span id=\"completed\">Completed</span>\n            </div>\n            <button className=\"clear-btn\" onClick={clearList}>Delete all</button>\n      </div>\n      <ul className='task-box'>\n      {list.length > 0 ? (\n      <List items={list} removeItem={removeItem} editItem={editItem} isActive={isActive} showMenu={showMenu} updateStatus={updateStatus}/>\n    ) : <div className=\"icon-container\"><span>Looks like you don't have any task here</span><img className=\"shrug\" src={shrug} alt=\"shrug\"/></div>}\n      </ul>\n  </section>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}